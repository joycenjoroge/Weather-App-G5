{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/hp/Weather-App-G5/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const getWeatherData = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c56387a48d04baac0d5143e20f54338e`);\n    const data = await response.json();\n    setWeatherData(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"Enter City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getWeatherData,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-data-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", Math.round(weatherData.main.temp - 273.15), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels Like: \", Math.round(weatherData.main.feels_like - 273.15), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-description-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: weatherData.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/w/${weatherData.weather[0].icon}.png`,\n          alt: \"Weather Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weatherData.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"VEbM+LXFX5np38azcd69T0ntHU4=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","Weather","city","setCity","weatherData","setWeatherData","getWeatherData","response","fetch","data","json","e","target","value","name","Math","round","main","temp","feels_like","humidity","weather","icon","description"],"sources":["/mnt/c/Users/hp/Weather-App-G5/src/Weather.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Weather.css';\n\nfunction Weather() {\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n\n  const getWeatherData = async () => {\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c56387a48d04baac0d5143e20f54338e`);\n    const data = await response.json();\n    setWeatherData(data);\n  }\n\n  return (\n    <div className=\"weather-container\">\n      <h1>Weather App</h1>\n      <div className=\"form-container\">\n        <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Enter City\" />\n        <button onClick={getWeatherData}>Get Weather</button>\n      </div>\n      {weatherData && (\n        <div className=\"weather-data-container\">\n          <h2>{weatherData.name}</h2>\n          <div className=\"temperature-container\">\n            <p>Temperature: {Math.round(weatherData.main.temp - 273.15)}°C</p>\n            <p>Feels Like: {Math.round(weatherData.main.feels_like - 273.15)}°C</p>\n            <p>Humidity: {weatherData.main.humidity}%</p>\n          </div>\n          <div className=\"weather-description-container\">\n            <p>{weatherData.weather[0].main}</p>\n            <img src={`http://openweathermap.org/img/w/${weatherData.weather[0].icon}.png`} alt=\"Weather Icon\" />\n            <p>{weatherData.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC;AAEvB,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMM,cAAc,GAAG,YAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDN,IAAK,yCAAwC,CAAC;IAChI,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCL,cAAc,CAACI,IAAI,CAAC;EACtB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,mBAAmB;IAAA,wBAChC;MAAA,UAAI;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eACpB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC7B;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEP,IAAK;QAAC,QAAQ,EAAGS,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAC,WAAW,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eACrG;QAAQ,OAAO,EAAEP,cAAe;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACjD,EACLF,WAAW,iBACV;MAAK,SAAS,EAAC,wBAAwB;MAAA,wBACrC;QAAA,UAAKA,WAAW,CAACU;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3B;QAAK,SAAS,EAAC,uBAAuB;QAAA,wBACpC;UAAA,WAAG,eAAa,EAACC,IAAI,CAACC,KAAK,CAACZ,WAAW,CAACa,IAAI,CAACC,IAAI,GAAG,MAAM,CAAC,EAAC,OAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI,eAClE;UAAA,WAAG,cAAY,EAACH,IAAI,CAACC,KAAK,CAACZ,WAAW,CAACa,IAAI,CAACE,UAAU,GAAG,MAAM,CAAC,EAAC,OAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI,eACvE;UAAA,WAAG,YAAU,EAACf,WAAW,CAACa,IAAI,CAACG,QAAQ,EAAC,GAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACzC,eACN;QAAK,SAAS,EAAC,+BAA+B;QAAA,wBAC5C;UAAA,UAAIhB,WAAW,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACJ;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK,eACpC;UAAK,GAAG,EAAG,mCAAkCb,WAAW,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAK,MAAM;UAAC,GAAG,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG,eACrG;UAAA,UAAIlB,WAAW,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACE;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACvC;IAAA;MAAA;MAAA;MAAA;IAAA,QAET;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAlCQtB,OAAO;AAAA,KAAPA,OAAO;AAoChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}